{{$app := .AppName | kebabcase}}
{{$clusterName := .ClusterName | kebabcase}}
apiVersion: xl-release/v1
kind: Templates
spec:
- name: {{$app}}
  type: xlrelease.Folder
  children:
  - name: {{$app}}-ci-cd
    type: xlrelease.Release
    description: |
      This XL Release template shows how to deploy an application, based on microservices architecture, to AWS EKS using XL Deploy.
    tags:
    - AWS
    - EKS
    - {{$app}}
    scriptUsername: !value XL_RELEASE_USERNAME
    scriptUserPassword: !value XL_RELEASE_PASSWORD
    variables:
    - key: control
      type: xlrelease.MapStringStringVariable
      requiresValue: false
      showOnReleaseStart: false
      value:
        namespace: xl-demo
        serviceName: store
    - key: lbHostnameOrIp
      type: xlrelease.StringVariable
      requiresValue: false
      showOnReleaseStart: false
    - key: AWSaccessKey
      type: xlrelease.StringVariable
      requiresValue: true
      showOnReleaseStart: false
      value: {{.AWSAccessKey}}
    - key: AWSaccessSecret
      type: xlrelease.StringVariable
      requiresValue: true
      showOnReleaseStart: false
      value: {{.AWSAccessSecret}}
    - key: store-admin-username
      type: xlrelease.StringVariable
      requiresValue: true
      showOnReleaseStart: false
      value: {{.StoreAdminUsername}}
    - key: store-admin-password
      type: xlrelease.StringVariable
      requiresValue: true
      showOnReleaseStart: false
      value: {{.StoreAdminPassword}}
    - key: xld-admin-password
      type: xlrelease.PasswordStringVariable
      requiresValue: true
      showOnReleaseStart: false
      value: !value XL_DEPLOY_PASSWORD
    phases:
    # Provision Infra
    - name: Provision Infrastructure
      color: '#ff9e3b'
      type: xlrelease.Phase
      tasks:
      - name: Provision Lambda artifacts
        type: xlrelease.SequentialGroup
        tasks:
        - name: Create S3 bucket for lambda artifacts
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-LAMBDA/{{$app}}-lambda-bucket/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Upload lambda artifacts to S3
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-LAMBDA/{{$app}}-lambda-artifacts/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
      - name: Provision AWS VPC and IAM resources
        type: xlrelease.ParallelGroup
        tasks:
        - name: Provision AWS IAM resources
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-user/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Provision AWS VPC
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-vpc/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
      - name: Provision AWS EKS cluster
        type: xlrelease.SequentialGroup
        tasks:
        - name: Provision EKS master node
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-master/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Provision EKS workers nodes
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-cloudformation-eks-workers/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-cloudformation-{{$app}}
        - name: Provision EKS config map for workers
          type: xldeploy.Deploy
          server: XL Deploy
          deploymentPackage: {{$app}}/EKS-CLOUDFORMATION/{{$app}}-k8s-configmap/1.0.0
          deploymentEnvironment: Environments/{{$app}}/aws-eks-{{$app}}-kube-system
    - name: Build {{$app}} application
      type: xlrelease.Phase
      tasks:
      - name: Build docker images for {{$app}} services
        type: xlrelease.ParallelGroup
        tasks:
        - name: Build {{$app}} store docker image
          type: jenkins.Build
          jenkinsServer: jenkins
          jobName: devops-as-code-eks-blueprint-store-svc
          owner: admin
          variableMapping:
            pythonScript.buildNumber: ${storeBuildNumber}
        - name: Build {{$app}} notification docker image
          type: jenkins.Build
          jenkinsServer: jenkins
          jobName: devops-as-code-eks-blueprint-notification-svc
          owner: admin
          variableMapping:
            pythonScript.buildNumber: ${notificationBuildNumber}
        - name: Build {{$app}} invoice docker image
          type: jenkins.Build
          jenkinsServer: jenkins
          jobName: devops-as-code-eks-blueprint-invoice-svc
          owner: admin
          variableMapping:
            pythonScript.buildNumber: ${invoiceBuildNumber}
    - name: Deploy {{$app}} application
      type: xlrelease.Phase
      tasks:
#      - name: Deploy xl-demo namespace
#        type: xldeploy.Deploy
#        server: XL Deploy
#        deploymentPackage: {{$app}}/K8S/{{$app}}-namespace/1.0.0
#        deploymentEnvironment: Environments/{{$app}}/aws-eks-{{$app}}